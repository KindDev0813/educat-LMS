{
  "homepages": [],
  "source_base_path": "/Users/vagrant/git",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Conceptual",
      "source_relative_path": "articles/continuous-integration.md",
      "output": {
        ".html": {
          "relative_path": "articles/continuous-integration.html",
          "hash": "nfhB5jPmMs7/NeMzAvtr8Q=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Conceptual",
      "source_relative_path": "articles/project-structure.md",
      "output": {
        ".html": {
          "relative_path": "articles/project-structure.html",
          "hash": "lwH2o2pTQ80/RVZJwvcFsQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/resources.md",
      "output": {
        ".html": {
          "relative_path": "articles/resources.html",
          "hash": "ypaYWBjzb2iVOuaJSd8ffA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/services.md",
      "output": {
        ".html": {
          "relative_path": "articles/services.html",
          "hash": "zyBD8LMlqCjdIAnJfp95pA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "favicon.ico",
      "output": {
        "resource": {
          "relative_path": "favicon.ico"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html",
          "hash": "T2/G/kS6IEJoJy0sDXR3Og=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "logo.svg",
      "output": {
        "resource": {
          "relative_path": "logo.svg"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "privacy-policy.md",
      "output": {
        ".html": {
          "relative_path": "privacy-policy.html",
          "hash": "BAcrcyBPQVY1X7PG0bwJzw=="
        }
      },
      "is_incremental": false,
      "version": ""
    }
  ],
  "incremental_info": [
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot build incrementally because last build info is missing.",
        "incrementalPhase": "build",
        "total_file_count": 0,
        "skipped_file_count": 0,
        "full_build_reason_code": "NoAvailableBuildCache"
      },
      "processors": {
        "ConceptualDocumentProcessor": {
          "can_incremental": false,
          "incrementalPhase": "build",
          "total_file_count": 6,
          "skipped_file_count": 0
        },
        "ResourceDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor ResourceDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        },
        "TocDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor TocDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        }
      }
    },
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot support incremental post processing, the reason is: last post processor info is null.",
        "incrementalPhase": "postProcessing",
        "total_file_count": 0,
        "skipped_file_count": 0
      },
      "processors": {}
    }
  ],
  "version_info": {},
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}