name: release

on: [ push ]
#  push:
#    branches: [ master ]

#   workflow_dispatch:
  
env:
  APP_VERSION: 2.2.0
  APP_BUNDLE_ID: by.bntu.educats
  IOS_PROJECT_PATH: ./source/EduCATS.iOS/EduCATS.iOS.csproj
  ANDROID_PROJECT_PATH: ./source/EduCATS.Android/EduCATS.Android.csproj
  ANDROID_KEYSTORE: ./source/EduCATS.Android/educats-release.keystore
  ANDROID_KEYSTORE_FILE_NAME: educats-release.keystore
  IOS_IPA_FILE_PATH: ./source/EduCATS.iOS/bin/iPhone/Release/EduCATS.iOS.ipa
  APPSTORE_CONNECT_AUTH_KEY: ./source/EduCATS.iOS/AuthKey.p8
  ANDROID_AAB_FILE_PATH: ./source/EduCATS.Android/bin/Release/by.bntu.educats-Signed.aab
  UNIT_TESTS_PROJECT_PATH: ./source/EduCATS.UnitTests/EduCATS.UnitTests.csproj
  TEST_COVERAGE_DIRECTORY: ./coverage

jobs:
  release:
    runs-on: macos-latest
    environment: github-actions-release

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Restore NuGet packages
        run: nuget restore ./source/EduCATS.sln
        
      - name: Install Coverlet Collector
        run: |
          dotnet tool install --global coverlet.console
          dotnet add ${{ env.UNIT_TESTS_PROJECT_PATH }} package coverlet.collector
          
      - name: Build unit-tests project
        run: dotnet build ${{ env.UNIT_TESTS_PROJECT_PATH }}
        
      - name: Run unit-test with Coverlet and generate report
        run: |
          dotnet test --collect:"XPlat Code Coverage" --settings ./source/coverlet.runsettings --results-directory:"${{ env.TEST_COVERAGE_DIRECTORY }}" ${{ env.UNIT_TESTS_PROJECT_PATH }}
          mv ${{ env.TEST_COVERAGE_DIRECTORY }}/*/coverage.info ${{ env.TEST_COVERAGE_DIRECTORY }}/lcov.info
        
      - name: Upload test report to Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ env.TEST_COVERAGE_DIRECTORY }}/lcov.info
          os: macos
        
      - name: Setup iOS certificates
        uses: apple-actions/import-codesign-certs@v1
        with: 
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_APPSTORE }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_APPSTORE_PASSWORD }}
          keychain: github-actions-xamarin
          keychain-password: ''
      
      - name: Setup iOS provisioning profiles
        uses: akiojin/install-provisioning-profile-github-action@v1.0
        with:
          base64: ${{ secrets.IOS_PROVISIONING_PROFILE_APPSTORE }}
          
      - name: Setup Android signing 
        run: (echo ${{ secrets.ANDROID_KEYSTORE_FILE }} | base64 --decode) > ${{ env.ANDROID_KEYSTORE }}
      
      - name: Get Github workflow build number
        env:
          GITHUB_WORKFLOW_NUMBER: ${{ github.run_number }}
        run: echo "APP_BUILD_NUMBER=$(($GITHUB_WORKFLOW_NUMBER+860))" >> $GITHUB_ENV
      
      - name: Update iOS app version
        uses: damienaicheh/update-ios-version-info-plist-action@v1.0.0
        with:
          info-plist-path: ./source/EduCATS.iOS/Info.plist
          bundle-version: ${{ env.APP_VERSION }}
          bundle-short-version-string: ${{ env.APP_BUILD_NUMBER }}
          
      - name: Update Android app version
        uses: damienaicheh/update-android-version-manifest-action@v1.0.0
        with:
          android-manifest-path: ./source/EduCATS.Android/Properties/AndroidManifest.xml
          version-name: ${{ env.APP_VERSION }}
          version-code: ${{ env.APP_BUILD_NUMBER }}
      
      - name: Build Android (APK)
        run: MSBuild /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias='${{ secrets.ANDROID_KEYSTORE_ALIAS }}' /p:AndroidSigningKeyPass='${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}' /p:AndroidSigningKeyStore='${{ env.ANDROID_KEYSTORE_FILE_NAME }}' /p:AndroidSigningStorePass='${{ secrets.ANDROID_KEYSTORE_PASSWORD }}' ${{ env.ANDROID_PROJECT_PATH }}
      
      - name: Build Android (AAB)
        run: MSBuild /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=aab /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias='${{ secrets.ANDROID_KEYSTORE_ALIAS }}' /p:AndroidSigningKeyPass='${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}' /p:AndroidSigningKeyStore='${{ env.ANDROID_KEYSTORE_FILE_NAME }}' /p:AndroidSigningStorePass='${{ secrets.ANDROID_KEYSTORE_PASSWORD }}' ${{ env.ANDROID_PROJECT_PATH }}
  
      - name: Build iOS        
        run: MSBuild /t:Build /p:Configuration=Release /p:Platform=iPhone /p:BuildIpa=true ${{ env.IOS_PROJECT_PATH }}
      
      - run: ls ./source/EduCATS.Android/bin/Release
      
      - name: TestFlight deployment
        run: |
          (echo ${{ secrets.APPSTORE_CONNECT_API_KEY_FILE_P8 }} | base64 --decode) > ${{ env.APPSTORE_CONNECT_AUTH_KEY }}
          mkdir -p ~/private_keys
          cp ${{ env.APPSTORE_CONNECT_AUTH_KEY }} ~/private_keys
          xcrun altool --upload-app -f ${{ env.IOS_IPA_FILE_PATH }} --type ios -u ${{ secrets.APPLE_ID }} -p ${{ secrets.APPLE_SPECIFIC_PASSWORD }}
          
      - name: Google Play deployment
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_API_JSON_PLAIN }}
          packageName: ${{ env.APP_BUNDLE_ID }}
          releaseFiles: ${{ env.ANDROID_AAB_FILE_PATH }}
          track: beta
