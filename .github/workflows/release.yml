name: release

on:
 workflow_dispatch:
 push:
   branches:
    - feature/github-actions
    - master

env:
  APP_VERSION: 2.2.5
  ARTIFACTS_DIRECTORY: ./artifacts
  COVERAGE_COVERAGE_FILE_PATH: ./coverage/lcov.info
  GIT_USER_NAME: github-actions
  GIT_USER_EMAIL: auto@users.noreply.github.com
  SOLUTION_PATH: ./source/EduCATS.sln

jobs:
  test:
    runs-on: macos-latest
    environment: github-actions-release
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Unit-Tests Build + Coverlet
        run: |
          dotnet tool install --global coverlet.console
          dotnet add $PROJECT_PATH package coverlet.collector
          dotnet build $PROJECT_PATH
          dotnet test --collect:"XPlat Code Coverage" --settings $COVERLET_SETTINGS --results-directory:"$COVERAGE_DIRECTORY" $PROJECT_PATH
          mv $COVERAGE_DIRECTORY/*/$COVERAGE_INFO_FILENAME ${{ env.COVERAGE_COVERAGE_FILE_PATH }}
        env:
          PROJECT_PATH: ./source/EduCATS.UnitTests/EduCATS.UnitTests.csproj
          COVERLET_SETTINGS: ./source/coverlet.runsettings
          COVERAGE_DIRECTORY: ./coverage
          COVERAGE_INFO_FILENAME: coverage.info          
        
      - name: Codecov Deploy
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ env.COVERAGE_COVERAGE_FILE_PATH }}
          os: macos
          
  build:
    runs-on: macos-latest
    environment: github-actions-release
    needs: test
    outputs:
      build_number: ${{ steps.build_number_setup.outputs.build }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: NuGet Restore
        run: nuget restore ${{ env.SOLUTION_PATH }}
        
      - name: iOS Certificates Install
        uses: apple-actions/import-codesign-certs@v1
        with: 
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_APPSTORE }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_APPSTORE_PASSWORD }}
          keychain: github-actions-xamarin
          keychain-password: ''
      
      - name: iOS Provisioning Profiles Install
        uses: akiojin/install-provisioning-profile-github-action@v1.0
        with:
          base64: ${{ secrets.IOS_PROVISIONING_PROFILE_APPSTORE }}
          
      - name: Android Signing Setup
        run: (echo ${{ secrets.ANDROID_KEYSTORE_FILE }} | base64 --decode) > $KEYSTORE
        env:
          KEYSTORE: ./source/EduCATS.Android/educats-release.keystore
      
      - name: Build Number Variable Setup
        id: build_number_setup
        env:
          GITHUB_WORKFLOW_NUMBER: ${{ github.run_number }}
          BITRISE_LAST_BUILD_NUMBER: 860
        run: |
          echo "APP_BUILD_NUMBER=$(($GITHUB_WORKFLOW_NUMBER+$BITRISE_LAST_BUILD_NUMBER))" >> $GITHUB_ENV
          echo "::set-output name=build::$(($GITHUB_WORKFLOW_NUMBER+$BITRISE_LAST_BUILD_NUMBER))"
      
      - name: Info.plist Version Update
        uses: damienaicheh/update-ios-version-info-plist-action@v1.0.0
        with:
          info-plist-path: ./source/EduCATS.iOS/Info.plist
          bundle-version: ${{ env.APP_BUILD_NUMBER }}
          bundle-short-version-string: ${{ env.APP_VERSION }}
          
      - name: AndroidManifest Version Update
        uses: damienaicheh/update-android-version-manifest-action@v1.0.0
        with:
          android-manifest-path: ./source/EduCATS.Android/Properties/AndroidManifest.xml
          version-name: ${{ env.APP_VERSION }}
          version-code: ${{ env.APP_BUILD_NUMBER }}
      
      - name: Artifacts Directory Setup
        run: mkdir ${{ env.ARTIFACTS_DIRECTORY }}
      
      - name: Android Build (apk + aab)
        run: |
          MSBuild /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias='${{ secrets.ANDROID_KEYSTORE_ALIAS }}' /p:AndroidSigningKeyPass='${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}' /p:AndroidSigningKeyStore=$KEYSTORE_FILENAME /p:AndroidSigningStorePass='${{ secrets.ANDROID_KEYSTORE_PASSWORD }}' $PROJECT_PATH
          cp $APK_FILE_PATH $ARTIFACTS_APK_PATH
          MSBuild /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=aab /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias='${{ secrets.ANDROID_KEYSTORE_ALIAS }}' /p:AndroidSigningKeyPass='${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}' /p:AndroidSigningKeyStore=$KEYSTORE_FILENAME /p:AndroidSigningStorePass='${{ secrets.ANDROID_KEYSTORE_PASSWORD }}' $PROJECT_PATH
          cp $AAB_FILE_PATH $ARTIFACTS_AAB_PATH
        env:
          PROJECT_PATH: ./source/EduCATS.Android/EduCATS.Android.csproj
          KEYSTORE_FILENAME: educats-release.keystore
          APK_FILE_PATH: ./source/EduCATS.Android/bin/Release/by.bntu.educats-Signed.apk
          AAB_FILE_PATH: ./source/EduCATS.Android/bin/Release/by.bntu.educats-Signed.aab
          ARTIFACTS_APK_PATH: ./artifacts/by.bntu.educats.apk
          ARTIFACTS_AAB_PATH: ./artifacts/by.bntu.educats.aab

      - name: iOS Build
        run: |
          MSBuild /t:Build /p:Configuration=Release /p:Platform=iPhone /p:BuildIpa=true $PROJECT_PATH
          cp $IPA_PATH $ARTIFACTS_IPA_PATH
        env:
          PROJECT_PATH: ./source/EduCATS.iOS/EduCATS.iOS.csproj
          IPA_PATH: ./source/EduCATS.iOS/bin/iPhone/Release/EduCATS.iOS.ipa
          ARTIFACTS_IPA_PATH: ./artifacts/EduCATS.ipa
          
      - name: Artifacts Upload
        uses: actions/upload-artifact@v2
        with:
          name: apps-artifacts
          path: ${{ env.ARTIFACTS_DIRECTORY }}
          
  deploy:
    runs-on: macos-latest
    environment: github-actions-release
    needs: build

    steps:
      - name: Artifacts Download
        uses: actions/download-artifact@v2
        with:
          name: apps-artifacts
          
      - name: AppStore Deploy
        run: |
          (echo ${{ secrets.APPSTORE_CONNECT_API_KEY_FILE_P8 }} | base64 --decode) > $AUTH_KEY
          xcrun altool --upload-app -f $IPA_FILE_PATH --type ios -u ${{ secrets.APPLE_ID }} -p ${{ secrets.APPLE_SPECIFIC_PASSWORD }}
        env:
          AUTH_KEY: ./AuthKey.p8
          IPA_FILE_PATH: ./EduCATS.ipa
          
      - name: Google Play Deploy
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_API_JSON_PLAIN }}
          packageName: by.bntu.educats
          releaseFiles: ./by.bntu.educats.aab
          track: beta
          
      - name: Release Tag
        uses: negz/create-tag@v1
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         version: ${{ env.APP_VERSION }}.${{ needs.build.outputs.build_number }}
         message: Release ${{ env.APP_VERSION }}.${{ needs.build.outputs.build_number }}
          
      - name: Github Release
        id: github_release
        uses: release-drafter/release-drafter@v5.19.0
        with:
          name: Release ${{ env.APP_VERSION }}.${{ needs.build.outputs.build_number }}
          tag: ${{ env.APP_VERSION }}.${{ needs.build.outputs.build_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Github Release Artifacts Upload
        uses: nanoufo/action-upload-artifacts-and-release-assets@v1.4
        with:
          path: ./by.bntu.educats.apk
          upload-release-files: true
          release-upload-url: ${{ steps.github_release.outputs.upload_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  docs:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Docs Generation
        run: sh ./scripts/docs_generator.sh
        
      - name: Date Setup
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
      - name: Docs Push (master)
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'master'
          commit-message: '[UPDATE] [${{ steps.date.outputs.date }}] [skip ci] Docs'
          files: ./docs
          name: ${{ env.GIT_USER_NAME }}
          email: ${{ env.GIT_USER_EMAIL }}
          rebase: 'true'
          
      - name: Changes Merge (develop)
        uses: bambamboole/gha-upmerge@v1.0.1
        with:
          from_branch: 'master'
          to_branch: 'develop'
          user_name: ${{ env.GIT_USER_NAME }}
          user_email: ${{ env.GIT_USER_EMAIL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
